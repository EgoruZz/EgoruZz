name: WakaTime Sync
on:
  schedule:
    - cron: "0 0 * * 1"  # –û—Å–Ω–æ–≤–Ω–æ–π —Å–±—Ä–æ—Å –≤ 00:00 UTC (03:00 –ú–°–ö) –∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
    - cron: "0 */3 * * *"  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞
  workflow_dispatch:

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc
      
      - name: Fetch and process stats
        env:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        run: |
          # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞ (–ø–æ–ª–Ω—ã–π –∏–ª–∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)
          if [ "$(date +%u)" -eq 1 ] && [ "$(date +%H)" -eq 0 ]; then
            CACHE_BUSTER=$(date +%Y%m%d)
            REPORT_TYPE="WEEKLY REPORT"
          else
            CACHE_BUSTER="cache"
            REPORT_TYPE="AUTO UPDATE"
          fi

          # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
          curl -s "https://wakatime.com/api/v1/users/current/stats/last_7_days?api_key=$WAKATIME_API_KEY&cache_buster=$CACHE_BUSTER" > wakatime.json
          
          # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
          total_seconds=$(jq -r '.data.total_seconds' wakatime.json)
          best_day_seconds=$(jq -r '.data.best_day.total_seconds' wakatime.json)
          productivity=$(echo "scale=1; $best_day_seconds / $total_seconds * 100" | bc)
          start_date=$(date -d "last monday" +"%Y-%m-%d")
          end_date=$(date -d "last sunday" +"%Y-%m-%d")
          
          # –§–æ—Ä–º–∏—Ä—É–µ–º Markdown
          echo '```text' > stats.md
          echo "‚è≥ $REPORT_TYPE ($start_date ‚Üí $end_date)" >> stats.md
          echo '‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê' >> stats.md
          echo '‚îÇ            üìä CODING ANALYTICS        ‚îÇ' >> stats.md
          echo '‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§' >> stats.md
          echo '‚îÇ Total Time            ‚îÇ '$(jq -r '.data.human_readable_total' wakatime.json)' ‚îÇ' >> stats.md
          echo '‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§' >> stats.md
          echo '‚îÇ Daily Avg             ‚îÇ '$(jq -r '.data.human_readable_daily_average' wakatime.json)' ‚îÇ' >> stats.md
          echo '‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§' >> stats.md
          echo '‚îÇ Best Day              ‚îÇ '$(jq -r '.data.best_day.text + " (" + .data.best_day.date + ")"' wakatime.json)' ‚îÇ' >> stats.md
          echo '‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§' >> stats.md
          echo '‚îÇ Productivity Peak     ‚îÇ '$productivity'% ‚îÇ' >> stats.md
          echo '‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò' >> stats.md
          echo '' >> stats.md
          
          echo 'üîù TOP 5 TECHNOLOGIES' >> stats.md
          jq -r '.data.languages[0:5] | .[] | "‚îÇ \(.name): \(.text) (\(.percent|floor)%)"' wakatime.json >> stats.md
          echo '' >> stats.md
          
          echo 'üîÑ Last sync: '$(date +"%Y-%m-%d %H:%M")' (MSK)' >> stats.md
          echo '```' >> stats.md
          
          # –û–±–Ω–æ–≤–ª—è–µ–º README
          sed -i '/<!--START_SECTION:waka-->/,/<!--END_SECTION:waka-->/{
              /<!--START_SECTION:waka-->/r stats.md
              d
          }' README.md
          
          rm -f stats.md wakatime.json
      
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          
          # –†–∞–∑–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
          if [ "$(date +%u)" -eq 1 ] && [ "$(date +%H)" -eq 0 ]; then
            git commit -m "üîÑ Weekly stats reset ($(date +'%Y-%m-%d'))"
          else
            git commit -m "üìà Stats auto-update ($(date +'%H:%M'))" || echo "No changes to commit"
          fi
          
          git push
