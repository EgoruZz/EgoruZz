name: WakaTime Sync
concurrency:
  group: wakatime-sync-${{ github.ref }}
  cancel-in-progress: false

on:
  schedule:
    - cron: "0 0 * * *"  # Every day at 00:00 UTC (03:00 MSK)
  workflow_dispatch:
    inputs:
      force-refresh:
        description: 'Force full refresh (ignore cache)'
        required: false
        default: 'false'

jobs:
  update-stats:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup environment
        run: |
          sudo apt-get update
          sudo apt-get install -y jq bc

      - name: Fetch and process stats
        id: process-stats
        env:
          WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
        run: |
          # Function for progress bars
          generate_progress_bar() {
            local value=${1:-0}
            local max=${2:-100}
            local size=${3:-20}
            local percentage=$(( value * 100 / max ))
            local progress=$(( percentage * size / 100 ))
            local remainder=$(( size - progress ))
            printf -v bar "%${progress}s" ""
            printf -v remainder "%${remainder}s" ""
            echo "${bar// /▇}${remainder// /░} ${percentage}%"
          }

          # Get current week dates (Monday to Sunday)
          MONDAY_DATE=$(date -d "last monday" +"%Y-%m-%d")
          SUNDAY_DATE=$(date -d "next sunday" +"%Y-%m-%d")
          TODAY=$(date +"%Y-%m-%d")
          CURRENT_DAY=$(date +%u)
          
          # Get WakaTime data for current week
          API_URL="https://wakatime.com/api/v1/users/current/summaries?start=$MONDAY_DATE&end=$SUNDAY_DATE&api_key=$WAKATIME_API_KEY"
          echo "::group::Fetching WakaTime data from $API_URL"
          curl -sS --retry 3 --retry-delay 2 "$API_URL" > wakatime.json
          echo "API response:"
          cat wakatime.json | jq empty 2>/dev/null || echo "Invalid JSON response"
          echo "::endgroup::"

          # Check if response is valid
          if ! jq -e '.data[0]' wakatime.json >/dev/null 2>&1; then
            echo "::error::Invalid WakaTime API response"
            echo '```text' > stats.md
            echo "⏳ WAKATIME STATS UNAVAILABLE" >> stats.md
            echo "🔄 Last sync attempt: $(date +'%Y-%m-%d %H:%M') (MSK)" >> stats.md
            echo "" >> stats.md
            echo "Failed to fetch data from WakaTime API" >> stats.md
            echo "Please check your API key and connection" >> stats.md
            echo '```' >> stats.md
          else
            # Process data with fallback values
            total_seconds=$(jq -r '.data[0].grand_total.total_seconds // 0' wakatime.json)
            total_time=$(jq -r '.data[0].grand_total.text // "0 secs"' wakatime.json)
            
            # Calculate daily average for full week (7 days)
            daily_average_seconds=$(( total_seconds / 7 ))
            daily_average_hours=$((daily_average_seconds / 3600))
            daily_average_mins=$(( (daily_average_seconds % 3600) / 60 ))
            daily_average="${daily_average_hours}hr ${daily_average_mins}min"

            # Generate report
            echo '```text' > stats.md
            echo "⏳ CURRENT WEEK » $MONDAY_DATE → $SUNDAY_DATE" >> stats.md
            echo "🔄 Updated: $(date +'%Y-%m-%d %H:%M') (MSK)" >> stats.md
            echo "" >> stats.md
            
            # Simple metrics table
            echo "┌──────────────────────┬──────────────────┐" >> stats.md
            echo "│ Metric               │ Value            │" >> stats.md
            echo "├──────────────────────┼──────────────────┤" >> stats.md
            printf "│ %-20s │ %-16s │\n" "Total Time" "$total_time" >> stats.md
            printf "│ %-20s │ %-16s │\n" "Daily Average" "$daily_average" >> stats.md
            printf "│ %-20s │ %-16s │\n" "Current Day" "$(date +'%A')" >> stats.md
            echo "└──────────────────────┴──────────────────┘" >> stats.md
            echo "" >> stats.md
            
            # Weekly activity (only if days data exists)
            if jq -e '.data[0].days' wakatime.json >/dev/null 2>&1; then
              echo "📅 WEEKLY PROGRESS" >> stats.md
              echo "┌──────────────┬────────────────┬──────────────────────┐" >> stats.md
              echo "│ Day          │ Coding Time    │ Activity Progress    │" >> stats.md
              echo "├──────────────┼────────────────┼──────────────────────┤" >> stats.md
              
              # Get all days of week
              DAYS=("Monday" "Tuesday" "Wednesday" "Thursday" "Friday" "Saturday" "Sunday")
              for day in "${DAYS[@]}"; do
                day_date=$(date -d "last monday +$((${#DAYS[@]} - 1)) days" +"%Y-%m-%d")
                day_data=$(jq -r --arg day "$day_date" '.data[0].days[] | select(.date == $day)' wakatime.json)
                
                if [[ -n "$day_data" ]]; then
                  text=$(jq -r '.text' <<< "$day_data")
                  percent=$(jq -r '.percent // 0' <<< "$day_data")
                else
                  text="0 secs"
                  percent=0
                fi
                
                printf "│ %-12s │ %-14s │ %-20s │\n" "$day" "$text" "$(generate_progress_bar ${percent%.*} 100 20)"
              done >> stats.md
              
              echo "└──────────────┴────────────────┴──────────────────────┘" >> stats.md
            else
              echo "No daily activity data available" >> stats.md
            fi
            echo '```' >> stats.md
          fi

          # Update README
          sed -i '/<!--START_SECTION:waka-->/,/<!--END_SECTION:waka-->/{
              /<!--START_SECTION:waka-->/r stats.md
              d
          }' README.md
          
          # Set outputs
          echo "stats-generated=true" >> $GITHUB_OUTPUT
          rm -f stats.md wakatime.json

      - name: Commit and push changes
        if: steps.process-stats.outputs.stats-generated == 'true'
        run: |
          if git diff --quiet --exit-code README.md; then
            echo "::notice::No changes detected in README.md"
            exit 0
          fi

          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md
          git commit -m "📊 Update WakaTime stats [$(date +'%Y-%m-%d %H:%M')]"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git pull --rebase
          git push origin main
